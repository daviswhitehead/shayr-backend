service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth.uid != null;
    }
    function nestedUser(user) {
      return request.auth.uid == user;
    }

    match /adds/{add} {
      allow read, write: if isSignedIn();
    }

    match /dones/{done} {
      allow read, write: if isSignedIn();
    }

    match /friends/{friendship} {
      allow read, write: if isSignedIn();
    }

    match /likes/{like} {
      allow read, write: if isSignedIn();
    }

    match /posts/{post} {
      allow read: if isSignedIn();
    }

    match /shares/{share} {
      allow read, write: if isSignedIn();
    }

    match /users/{user} {
      allow read, create: if isSignedIn();
      allow update: if isSignedIn() && nestedUser(user);

      match /inboundShares/{inboundShare} {
        allow read, write: if isSignedIn() && nestedUser(user);
      }
    }

    match /users_posts/{user_post} {
      allow read, write: if isSignedIn();
    }

  }
}

// https://firebase.google.com/docs/firestore/security/rules-structure
// read
// // get applies to single document read requests
// // list applies to queries and collection read requests
// write
// // create applies to writes to nonexistent documents
// // update applies to writes to existing documents
// // delete applies to delete operations